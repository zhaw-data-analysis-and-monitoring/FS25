---
date: 2024-03-05
lesson: PrePro3
topic: Split-Apply-Combine
index: 2
execute:
  echo: true # set to true to show sample solution
  output: true # set to true to show sample solution
code-fold: true
code-summary: "Sample Solution"
knitr:
  opts_chunk:
    collapse: true
---


# Prepro 3: Exercise

## Task 1

You have a dataset, *sensors_long.csv*, with temperature values from three different sensors. Import it as a csv into R (as `sensors_long`).

Reformat the `datetime` column to `POSIXct`. Use the *as.POSIXct* function (read it in using`?strftime())` to determine the specific format (the template).

```{r}
library("readr")

sensors_long <- read_delim("datasets/prepro/sensors_long.csv", ",")

```



## Task 2

Group `sensors_long` according to the column `name` where the sensor information is contained, using the function `group_by`, and calculate the average temperature for each sensor (`summarise`). Note: Both functions are part of the `dplyr` package.

The output will look like this:

```{r}
#| output: true

library("dplyr")

sensors_long |>
  group_by(name) |>
  summarise(temp_mean = mean(value, na.rm = TRUE))
```

## Task 3

Create a new *convenience* variable, `month`, for `sensors_long` (Tip: use the `month` function from `lubridate`). Now group by `month` *and* sensor and calculate the mean temperature.

```{r}
library("lubridate")

sensors_long |>
  mutate(month = month(Datetime)) |>
  group_by(month, name) |>
  summarise(temp_mean = mean(value, na.rm = TRUE))
```

## Task 4

Now import the *weather.csv* dataset (source MeteoSwiss) with the correct column types (`time` as `POSIXct`, `tre200h0` as `double`). You can download the file from moodle if you havent done so yet.

```{r}
weather <- read_delim("datasets/prepro/weather.csv")


weather$time2 <- weather$time |> 
  as.character() |> 
  as.POSIXct(format = "%Y%m%d%H", tz = "UTC")
  

weather$time <- weather$time2
weather$time2 <- NULL

```

## Task 5

Now create a *convenience variable* for the calendar week for each measurement (`lubridate::isoweek`). Then calculate the average temperature value for each calendar week.

```{r}
weather_summary <- weather |>
  mutate(week = isoweek(time)) |>
  group_by(week) |>
  summarise(
    temp_mean = mean(tre200h0, na.rm = TRUE)
  )
```

Next, you can visualise the result using the following function:

```{r}
#| results: asis
#| fig.show: asis
#| echo: true
#| code-fold: false

plot(weather_summary$week, weather_summary$temp_mean, type = "l")
```

## Task 6

In the previous task, we calculated the average temperature per calendar week over *all years* (2000 and 2001). However, if we want to compare the years with each other, we have to create the year as an additional *convenience variable* and group it accordingly. Try this with the weather data and then visualise the output.

```{r}
weather_summary2 <- weather |>
  mutate(
    week = week(time),
    year = year(time)
    ) |>
  group_by(year, week) |>
  summarise(
    temp_mean = mean(tre200h0, na.rm = TRUE)
  )
```


```{r}
#| label: fig-baseplot-ex7
#| fig.cap: Base plot does not like long tables and makes a continuous line out of the two years
#| output: true

plot(weather_summary2$week, weather_summary2$temp_mean, type = "l")
```



