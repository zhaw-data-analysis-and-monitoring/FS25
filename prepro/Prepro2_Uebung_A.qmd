---
date: 2024-02-27
lesson: PrePro2
topic: Piping / Joins
index: 2
execute:
  echo: false # set to true to show sample solution
  output: false # set to true to show sample solution
code-fold: true
code-summary: "Sample Solution"
knitr:
  opts_chunk:
    collapse: true
---

# Prepro 2: Exercise A

```{r}
#| echo: true
#| code-fold: false

library("dplyr")
library("readr")
library("lubridate")
```

## Task 1

Read the weather data from last week *weather.csv* (source MeteoSchweiz) into R. Make sure that the columns are formatted correctly (`stn` as a `factor`, `time` as `POSIXct`, `tre200h0` as a `numeric`).

```{r}
weather <- read_delim("datasets/prepro/weather.csv", ",")
weather$stn <- as.factor(weather$stn)
weather$time <- as.POSIXct(as.character(weather$time), format = "%Y%m%d%H", tz = "UTC")
```


## Task 2

Read in the *metadata.csv* dataset as a csv.

:::{.callout-tip}
If umlauts and special characters are not displayed correctly (e.g. the *è* in Gèneve), this probably has something to do with the [character encoding](https://youtu.be/MijmeoH9LT4?si). The file is currently encoded in `UTF-8`. If special characters are not correctly displayed, R has not recognised this encoding and it must be specified in the import function. How this is done depends on the import function used:

- Package functions: `readr`: `locale = locale(encoding = "UTF-8")`
- Base-R functions: `fileEncoding = "UTF-8"`

Note: If you have a file where you do *not* know how a file is encoded, the following instructions for [Windows](https://stackoverflow.com/a/13464816/4139249), [Mac](https://stackoverflow.com/a/2461193/4139249) and [Linux](https://stackoverflow.com/a/805474/4139249) will help.
:::

```{r}
metadata <- read_delim("datasets/prepro/metadata.csv", ";", locale = locale(encoding = "UTF-8"))
```

## Task 3

Now we want to enrich the `weather` data set with information from `metadata`. However, we are only interested in the station abbreviation, the name, the x/y coordinates and the sea level. Select these columns.

```{r}
metadata <- metadata[, c("stn", "Name", "x", "y", "Meereshoehe")]
```

## Task 4

Now the `metadata` can be connected to the `weather` data set. Which join should we use to do this? And, which attribute can we join?

Use the join options in `dplyr` (help via`? dplyr::join`)  to connect the `weather` data set and the `metadata`.

```{r}
weather <- left_join(weather, metadata, by = "stn")

# Join type: Left-Join on 'weather', as we are only interested in the stations in the 'weather' dataset.
# Attribute: "stn"
```

## Task 5

Create a new `month` column (from `time`). To do this, use the `lubridate::month()` function.

```{r}
weather$month <- month(weather$time)
```

## Task 6

Use the `month` column to calculate the average temperature per month.

```{r}
mean(weather$tre200h0[weather$month == 1])
mean(weather$tre200h0[weather$month == 2])
mean(weather$tre200h0[weather$month == 3])

# etc. for all 12 months
```
